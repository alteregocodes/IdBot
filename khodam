<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta property="og:title" content="CEK KHODAM">
    <meta property="og:description" content="Cek khodam online kamu disiniðŸ‘¿"> 
    <meta property="og:image" content="https://telegra.ph/file/5208622b28fa01a4f94a6.jpg"> 
    <link rel="SHORTCUT ICON" href="https://telegra.ph/file/5208622b28fa01a4f94a6.jpg">
    <title>Cek Khodam</title>
    <style>
        /* Your existing CSS here */
    </style>
</head>
<body>
    <!-- Your existing HTML here -->

    <script>
        const usageLimit = 10;
        const unlimitedIPs = ["116.206.15.32"]; // Unlimited IP
        let userIP = '';
        let usageCount = parseInt(localStorage.getItem('usageCount')) || 0;
        let lastUsageTime = parseInt(localStorage.getItem('lastUsageTime')) || 0;

        async function fetchUserIP() {
            try {
                const response = await fetch('https://api.ipify.org?format=json');
                const data = await response.json();
                return data.ip;
            } catch (error) {
                console.error('Error fetching IP:', error);
                return '';
            }
        }

        function resetUsageLimit() {
            const currentTime = new Date().getTime();
            const timeDiff = currentTime - lastUsageTime;
            const fifteenMinutes = 15 * 60 * 1000; // 15 menit dalam milidetik

            if (timeDiff >= fifteenMinutes) {
                usageCount = 0;
                localStorage.setItem('usageCount', usageCount);
                lastUsageTime = currentTime;
                localStorage.setItem('lastUsageTime', lastUsageTime);
            }
        }

        async function cekKhodam() {
            const nameInput = document.getElementById('nameInput').value;
            if (!nameInput) {
                showAlert();
                return;
            }

            if (!userIP) {
                userIP = await fetchUserIP();
            }

            resetUsageLimit();

            if (unlimitedIPs.includes(userIP) || usageCount < usageLimit) {
                document.getElementById('loader').style.display = 'block';
                setTimeout(() => {
                    const khodam = pickRandom(khodams);
                    document.getElementById('khodamName').innerText = `Khodam: ${khodam.name}`;
                    document.getElementById('khodamMeaning').innerText = khodam.meaning;
                    document.getElementById('result').style.display = 'block';
                    document.getElementById('loader').style.display = 'none';
                    if (!unlimitedIPs.includes(userIP)) {
                        usageCount++;
                        localStorage.setItem('usageCount', usageCount);
                        document.getElementById('remainingUses').innerText = usageLimit - usageCount;
                    } else {
                        document.getElementById('remainingUses').innerText = "Unlimited";
                    }
                    document.getElementById('limit').style.display = 'block';
                    document.getElementById('userIP').style.display = 'block';
                    document.getElementById('ipAddress').innerText = userIP;
                }, 2000);
            } else {
                showLimitAlert();
            }
        }

        function redeemCode() {
            const redeemCodeInput = document.getElementById('redeemCodeInput').value;
            fetch('redeem_code_handler.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ code: redeemCodeInput, ip: userIP })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Kode redeem berhasil digunakan! Limit penggunaan Anda telah ditambahkan.');
                    localStorage.setItem('usageCount', 0); // Reset usage count
                    document.getElementById('remainingUses').innerText = usageLimit;
                } else {
                    alert('Kode redeem tidak valid atau sudah digunakan.');
                }
                closeRedeemAlert();
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }

        // Your existing JavaScript functions here

        window.onload = async () => {
            userIP = await fetchUserIP();
            resetUsageLimit();
            if (unlimitedIPs.includes(userIP)) {
                document.getElementById('remainingUses').innerText = "Unlimited";
            } else {
                document.getElementById('remainingUses').innerText = usageLimit - usageCount;
            }
            document.getElementById('limit').style.display = 'block';
            document.getElementById('userIP').style.display = 'block';
            document.getElementById('ipAddress').innerText = userIP;
        };
    </script>
</body>
</html>
